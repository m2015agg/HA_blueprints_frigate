blueprint:
  # … all your existing blueprint/meta/info here …

mode: parallel

trigger_variables:
  mqtt_topic: !input mqtt_topic

triggers:
  - platform: mqtt
    topic: "{{ mqtt_topic }}"
    value_template: "{{ value_json.type in ['new','update'] }}"
    id: frigate-event

variables:
  # … your variables: section here …

conditions:
  - condition: template
    value_template: >
      {{ type_ok and severity_ok and camera_ok }}

actions:
  - choose:
      - alias: "Frigate Event"
        conditions:
          - condition: template
            value_template: "{{ type_ok and severity_ok and camera_ok }}"
        sequence:
          # optional initial delay
          - choose:
              - conditions: "{{ initial_delay > 0 }}"
                sequence:
                  - delay:
                      seconds: "{{ initial_delay }}"

          # only send if loitering matches selection
          - choose:
              - conditions: "{{ loiter_ok }}"
                sequence:
                  - device_id: !input notify_device
                    domain: mobile_app
                    type: notify
                    title: >
                      {{ 'Loitering' if pending_loitering == 'true'
                         else severity | capitalize }}
                      on {{ camera_name }}
                    message: >
                      {{ 'Object stopped' if pending_loitering == 'true'
                         else severity | capitalize ~ ' detected' }}
                      on {{ camera_name }}
                    data:
                      tag:            "{{ event.after.data.detections[0] }}"
                      group:          "{{ camera }}-frigate-notification"
                      image:          "{{ base_url }}/api/frigate/notifications/{{ event.after.data.detections[0] }}/thumbnail.jpg"
                      video:          "{{ base_url }}/api/frigate/notifications/{{ event.after.data.detections[0] }}/{{ camera }}/clip.mp4"
                      clickAction:    "{{ base_url }}/api/frigate/notifications/{{ event.after.data.detections[0] }}/{{ camera }}/clip.mp4"
                      ttl:            0
                      priority:       high
                      notification_icon: "mdi:car"
                      channel:        "alarm_stream"
                      actions:
                        - action: URI
                          title: View Clip
                          uri:   "{{ base_url }}/api/frigate/notifications/{{ event.after.data.detections[0] }}/{{ camera }}/clip.mp4"
                        - action: URI
                          title: View Snapshot
                          uri:   "{{ base_url }}/api/frigate/notifications/{{ event.after.data.detections[0] }}/snapshot.jpg"
