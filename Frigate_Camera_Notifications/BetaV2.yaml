blueprint:
  name: Frigate Notifications (Simple)
  domain: automation
  source_url: https://github.com/…
  description: |
    A streamlined Frigate notification blueprint focusing on:
      - Camera selection
      - Event type filtering (alerts, detections)
      - Loitering detection
      - Initial notification delay
      - iOS mobile_app notifications

input:
  camera:
    name: Frigate Cameras
    selector:
      entity:
        domain: camera
        integration: frigate
        multiple: true
  notify_device:
    name: Mobile Device
    selector:
      device:
        integration: mobile_app
        multiple: false
  event_types:
    name: Event Types
    default: [alert, detection]
    selector:
      select:
        options:
          - label: Alerts
            value: alert
          - label: Detections
            value: detection
        multiple: true
  loitering_types:
    name: Loitering Detection
    default: ["true","false"]
    selector:
      select:
        options:
          - label: Pending Loitering
            value: "true"
          - label: Non‑Loitering
            value: "false"
        multiple: true
  initial_delay:
    name: Initial Delay
    default: 0
    selector:
      number:
        min: 0
        max: 60
        unit_of_measurement: seconds
        step: 1
  base_url:
    name: Base URL (Optional)
    default: ""
    selector:
      text: {}
  mqtt_topic:
    name: MQTT Topic
    default: frigate/reviews
    selector:
      text: {}

mode: parallel

trigger_variables:
  mqtt_topic: !input mqtt_topic

triggers:
  - platform: mqtt
    topic: "{{ mqtt_topic }}"
    id: frigate-event
    value_template: "{{ value_json.type in ['new','update'] }}"

variables:
  cameras:          !input camera
  allowed_types:    !input event_types
  allowed_loiter:   !input loitering_types
  init_delay:       !input initial_delay
  base_url_raw:     !input base_url

  camera_names: >
    {{ cameras
       | expand
       | map(attribute="attributes.camera_name")
       | list }}

  base_url: >
    {{ base_url_raw.rstrip("/") }}

  event: >
    {{ trigger.payload_json }}

  event_type: >
    {{ event.type }}

  severity: >
    {{ event.after.severity }}

  camera: >
    {{ event.after.camera }}

  camera_name: >
    {{ camera.replace("_"," ") | title }}

  pending_loitering: >
    {{ event.after.get("pending_loitering", false)
       | string
       | lower }}

  type_ok: >
    {{ event_type in ["new","update","end"] }}

  severity_ok: >
    {{ severity in allowed_types }}

  camera_ok: >
    {{ camera_name in camera_names }}

  loiter_ok: >
    {{ pending_loitering in allowed_loiter }}

condition: and
conditions:
  - condition: template
    value_template: "{{ type_ok }}"
  - condition: template
    value_template: "{{ severity_ok }}"
  - condition: template
    value_template: "{{ camera_ok }}"

action:
  - choose:
      - alias: Send Notification
        conditions:
          - condition: template
            value_template: "{{ loiter_ok }}"
        sequence:
          # initial delay
          - choose:
              - conditions: "{{ init_delay > 0 }}"
                sequence:
                  - delay:
                      seconds: "{{ init_delay }}"
          # send the notification
          - device_id: !input notify_device
            domain: mobile_app
            type: notify
            title: >
              {{ "Loitering" if pending_loitering == "true"
                 else severity | capitalize }}
              on {{ camera_name }}
            message: >
              {{ "Object stopped" if pending_loitering == "true"
                 else severity | capitalize ~ " detected" }}
              on {{ camera_name }}
            data:
              tag: "{{ event.after.data.detections[0] }}"
              group: "{{ camera }}-frigate-notification"
              image: "{{ base_url }}/api/frigate/notifications/{{ event.after.data.detections[0] }}/thumbnail.jpg"
              video: "{{ base_url }}/api/frigate/notifications/{{ event.after.data.detections[0] }}/{{ camera }}/clip.mp4"
              clickAction: "{{ base_url }}/api/frigate/notifications/{{ event.after.data.detections[0] }}/{{ camera }}/clip.mp4"
              ttl: 0
              priority: high
              notification_icon: mdi:car
              channel: alarm_stream
              actions:
                - action: URI
                  title: View Clip
                  uri: >
                    {{ base_url }}/api/frigate/notifications/{{ event.after.data.detections[0] }}/{{ camera }}/clip.mp4
                - action: URI
                  title: View Snapshot
                  uri: >
                    {{ base_url }}/api/frigate/notifications/{{ event.after.data.detections[0] }}/snapshot.jpg
